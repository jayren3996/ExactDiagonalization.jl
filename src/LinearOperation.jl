#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Fill Matrix
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function colmn!(target::AbstractVector, M::SparseMatrixCSC, I::Vector{Int}, b::AbstractBasis, coeff::Real)
    rows, vals = rowvals(M), nonzeros(M)
    j = index(b.dgt, I, base=b.B)
    change = false
    for i in nzrange(M, j)
        row, val = rows[i], vals[i]
        change!(b.dgt, I, row, base=b.B)
        C, pos = index(b)
        target[pos] += C * val * coeff
        change = true
    end
    if change
        change!(b.dgt, I, j, base=b.B)
    end
end
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function colmn!(target::AbstractVector, opt::Operator, j::Integer)
    b, M, I = opt.B, opt.M, opt.I
    N = change!(b, j)
    for i = 1:length(M)
        colmn!(target, M[i], I[i], b, N)
    end
end
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
export fillmat!
function fillmat!(M::AbstractMatrix, opt::Operator)
    for j = 1:length(opt.B)
        colmn!(view(M, :, j), opt, j)
    end
    M
end
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
function Array(opt::Operator)
    N = length(opt.B)
    M = zeros(eltype(opt), N, N)
    fillmat!(M, opt)
end

#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Helper Functions
#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

